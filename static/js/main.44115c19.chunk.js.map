{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","API-services/ApiService.js","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/SearchBar.jsx","App.js","index.js","components/Searchbar/SearchBar.module.css"],"names":["module","exports","ApiService","this","API_KEY","API_PATH","searchQuery","queryPage","perPage","query","split","join","fetch","Button","onClick","className","s","type","ImageGalleryItem","image","src","webformatURL","alt","tags","modalRoot","document","querySelector","Modal","closeModalHandler","e","closeModal","props","code","target","currentTarget","window","addEventListener","removeEventListener","createPortal","Overlay","largeImageURL","Component","apiService","ImageGallery","state","images","status","error","showModal","loadMoreBtnHandler","incrementQueryPage","fetchImages","onImageClick","evt","nodeName","toggleModal","setState","largeImage","find","prevState","prevProps","resetQueryPage","scrollTo","top","documentElement","scrollHeight","behavior","then","response","json","hits","length","Promise","reject","Error","catch","style","margin","color","height","width","noImagesFoundWarn","message","map","SearchBar","onInputChange","value","onSubmit","preventDefault","trim","toast","Searchbar","SearchForm","button","buttonLabel","input","autoComplete","autoFocus","placeholder","onChange","App","setQuery","newQquery","position","autoClose","transition","Slide","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44115c19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\",\"image\":\"Modal_image__1cHuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\",\"noImagesFoundWarn\":\"ImageGallery_noImagesFoundWarn__th_7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"image\":\"ImageGalleryItem_image__2xsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","export default class ApiService {\n  constructor() {\n    this.API_KEY = '19115402-2f4ed690e134b4c839000dec3';\n    this.API_PATH = 'https://pixabay.com/api/';\n    this.searchQuery = '';\n    this.queryPage = 1;\n    this.perPage = 12;\n  }\n  fetchImages(query) {\n    let { API_PATH, API_KEY, searchQuery, queryPage, perPage } = this;\n    searchQuery = query.split(' ').join('+');\n    return fetch(\n      `${API_PATH}?key=${API_KEY}&q=${searchQuery}&page=${queryPage}&per_page=${perPage}`,\n    );\n  }\n  incrementQueryPage() {\n    this.queryPage += 1;\n  }\n  resetQueryPage() {\n    this.queryPage = 1;\n  }\n}\n","import React from 'react';\nimport s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ image }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img className={s.image} src={image.webformatURL} alt={image.tags} />\n    </li>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    image: PropTypes.object.isRequired,\n    closeModal: PropTypes.func.isRequired,\n  };\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeModalHandler);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeModalHandler);\n  }\n  closeModalHandler = e => {\n    const { closeModal } = this.props;\n    if (e.code === 'Escape' || e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  render() {\n    const { image } = this.props;\n    return createPortal(\n      <div className={s.Overlay} onClick={this.closeModalHandler}>\n        <div className={s.Modal}>\n          <img className={s.image} src={image.largeImageURL} alt={image.tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport s from './ImageGallery.module.css';\nimport ApiService from '../../API-services/';\n\nimport Button from '../Button';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Modal from '../Modal';\n\nconst apiService = new ApiService();\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    error: null,\n    showModal: false,\n  };\n  static propTypes = {\n    searchQuery: PropTypes.string.isRequired,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.props;\n\n    if (searchQuery !== prevProps.searchQuery) {\n      apiService.resetQueryPage();\n      this.setState({ images: [] });\n      this.fetchImages();\n    }\n    if (apiService.queryPage > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n  fetchImages() {\n    const { searchQuery } = this.props;\n\n    this.setState({ status: 'pending' });\n\n    apiService\n      .fetchImages(searchQuery)\n      .then(response => response.json())\n      .then(response => {\n        if (response.hits.length === 0) {\n          return Promise.reject(new Error(`No ${searchQuery} images found`));\n        }\n        this.setState(prevState => ({\n          images: [...prevState.images, ...response.hits],\n          status: 'resolved',\n        }));\n      })\n      .catch(error => this.setState({ status: 'rejected', error }));\n  }\n  loadMoreBtnHandler = () => {\n    apiService.incrementQueryPage();\n    this.fetchImages();\n  };\n\n  onImageClick = evt => {\n    const { images } = this.state;\n    if (evt.target.nodeName === 'IMG') {\n      this.toggleModal();\n      this.setState({\n        largeImage: images.find(image => image.webformatURL === evt.target.src),\n      });\n    }\n  };\n  toggleModal = () => {\n    this.setState(prevState => ({ showModal: !prevState.showModal }));\n  };\n  render() {\n    const { images, largeImage, status, error, showModal } = this.state;\n    if (status === 'idle') {\n      return null;\n    }\n    if (status === 'pending') {\n      return (\n        <Loader\n          style={{ margin: '0 auto' }}\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={40}\n          width={40}\n        />\n      );\n    }\n    if (status === 'rejected') {\n      return <b className={s.noImagesFoundWarn}>{error.message}</b>;\n    }\n    if (status === 'resolved') {\n      return (\n        <>\n          <ul className={s.ImageGallery} onClick={this.onImageClick}>\n            {images.map(image => (\n              <ImageGalleryItem image={image} key={image.webformatURL} />\n            ))}\n          </ul>\n          {images.length % 12 === 0 && (\n            <Button onClick={this.loadMoreBtnHandler} />\n          )}\n          {showModal && (\n            <Modal image={largeImage} closeModal={this.toggleModal} />\n          )}\n        </>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './SearchBar.module.css';\nimport ApiService from '../../API-services';\n\nconst apiService = new ApiService();\nexport default class SearchBar extends Component {\n  state = {\n    searchQuery: '',\n  };\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  onInputChange = evt => {\n    this.setState({\n      searchQuery: evt.target.value,\n    });\n  };\n  onSubmit = evt => {\n    const { searchQuery } = this.state;\n    const { onSubmit } = this.props;\n    evt.preventDefault();\n    if (searchQuery.trim() === '') {\n      return toast.error('Please, input search query ');\n    }\n    apiService.resetQueryPage();\n    onSubmit(searchQuery);\n  };\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.onSubmit}>\n          <button type=\"submit\" className={s.button}>\n            <span className={s.buttonLabel}>Search</span>\n          </button>\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchQuery}\n            onChange={this.onInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { ToastContainer, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport ImageGallery from './components/ImageGallery';\nimport SearchBar from './components/Searchbar';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  setQuery = newQquery => {\n    this.setState({ searchQuery: newQquery });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    const { setQuery } = this;\n    return (\n      <div className=\"App\">\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={2500}\n          transition={Slide}\n        />\n        <SearchBar onSubmit={setQuery} />\n        <ImageGallery searchQuery={searchQuery} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__LuSsJ\",\"SearchForm\":\"SearchBar_SearchForm__1OsD8\",\"button\":\"SearchBar_button__1AsWZ\",\"buttonLabel\":\"SearchBar_buttonLabel__2mFrQ\",\"input\":\"SearchBar_input__dWgLv\"};"],"sourceRoot":""}